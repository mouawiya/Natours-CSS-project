.row {
    max-width: $grid-width;
    margin: 0 auto;

    &:not(:last-child){
        margin-bottom: $gutter-vertical;

        // reduce the margin bottom for tab-port screens
        @include respond (tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    // media queries to reduce the width of rows  in the tab-port screens
    @include respond (tab-port) {
        max-width: 50rem;
        padding: 0 3rem; // adding left and right padding in order for the columns to have some space
    }

    @include clearfix;

    [class^="col-"] {
        
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;

            // media queries for tab-port
            @include respond (tab-port) {
                margin-right: 0; // remove right gutter
                margin-bottom: $gutter-vertical-small; // add a margin between rows 
            }
        }

        // media queries for the width of all columns to 100% in the tab-port and phone screens
        // which means that all the columns transformed into rows, so the entire mobile page will have a single column

        @include respond (tab-port) {
            width: 100% !important;
        }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}